% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/3_classes.R
\docType{class}
\name{RS-class}
\alias{RS-class}
\alias{RS}
\title{Class RS --- An S4 class to represent a raw signal inputs}
\description{
The RS class contains 3 equal length vector inputs: \ifelse{html}{\out{&#963<sub>b</sub>}}{\eqn{\sigma_b}{ASCII}},
\ifelse{html}{\out{&#949<sub>b</sub>}}{\eqn{\epsilon_b}{ASCII}} and
\ifelse{html}{\out{&#949<sub>p</sub>}}{\eqn{\epsilon_p}{ASCII}}.
}
\section{Slots}{

\describe{
\item{\code{sigb}}{A n-dimensional numeric vector represents the electrical conductivity of bulk soil,
\ifelse{html}{\out{&#963<sub>b</sub>}}{\eqn{\sigma_b}{ASCII}}.}

\item{\code{epsb}}{A n-dimensional numeric vector represents the electrical permitivity of bulk soil,
\ifelse{html}{\out{&#949<sub>b</sub>}}{\eqn{\epsilon_b}{ASCII}}.}

\item{\code{epsp}}{A n-dimensional numeric vector represents the electrical conductivity of pore water,
\ifelse{html}{\out{&#949<sub>p</sub>}}{\eqn{\epsilon_p}{ASCII}}.}
}}

\section{Details}{

Before the class is created, \code{\link[methods]{setValidity}} will be launched to check the length of 3
 input vectors.
 It will return "Error" if the lengths are not equal.
}

\section{Methods}{

Available methods for this class are: \itemize{
 \item \code{\link{show}}: the class display is simplyfied, each slot is limited to 25;
 \item \code{\link{print}}: displays the whole class;
 \item \code{\link{get}} (`[`): returns the value of a slot;
 \item \code{\link{plot}}: plots 3 slots as "timeseries" objects in the same graphic;
 \item \code{\link{plotCor}}: plots the correlation between
  \ifelse{html}{\out{&#949<sub>b</sub>}}{\eqn{\epsilon_b}{ASCII}}
  and \ifelse{html}{\out{&#963<sub>b</sub>}}{\eqn{\sigma_b}{ASCII}};
 \item \code{\link{buildClass}}: builds classes \code{\link{SM.dlm}} and \code{\link{SM.HL}};
 \item \code{\link{buildRNN}}: training a RNN model in order to build clase \code{\link{SM.rnn}}.
} Check the example below for more details.
}

\examples{
n <- 50
# An example to create the RS class.
my_first_class <- RS(sigb = rnorm(n, mean = 0, sd = 1),
                     epsb = rnorm(n, mean = 0, sd = 2),
                     epsp = rnorm(n, mean = 1, sd = 1))

# Show the class
my_first_class
# print the class
print(my_first_class)
# Extract the slot "sigb"
sigb <- my_first_class["sigb"]
### o  sigb <- `[`(my_first_class, "sigb)

# plot the class as timeseries object
plot(my_first_class)
# plot the correlation
plotCor(my_first_class, 7)

# build class
## build dlm model
dlm_class <- buildClass(object = my_first_class,
                        method = "dlm", freq = 1,
                        ind = list(), lagMax = 3,
                        verify = TRUE, parallel = TRUE)
## build HL model
mp_class <- buildClass(object = my_first_class,
                       method = "HL", ind = 9.5)
### ind in this case is offset

}
